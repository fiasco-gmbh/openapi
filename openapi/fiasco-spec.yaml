openapi: 3.1.1

info:
  title: FIASCO API
  description: |-
    We are providing several API endpoints for external partners which are described in this documentation.
    All endpoints are using a REST-like interface, meaning they are called via HTTP with a specific payload
    (described separately for each endpoint, don't forget to set the Content-Type header accordingly) and
    respond with an `application/json` payload. We notify customers about events using webhooks (HTTP requests
    with a JSON payload describing events).
  version: 3.7.1
  contact:
    name: FIASCO Support
    email: support@fiasco.de
    url: https://fiasco.de/

externalDocs:
  url: https://github.com/fiasco-gmbh/openapi/
  description: Find more information (e.g. a changelog) in the GitHub repository.

servers:
  - url: https://cloud.staging.fiasco.de/
    description: staging server
  - url: https://cloud.fiasco.de/
    description: production server

security:
  - BearerToken: []

tags:
  - name: Calculation Requests
    description: |-
      Calculation requests are requests to calculate the costs of a repair based on the provided data.
      The calculation is done asynchronously and the results are delivered via webhook.
  - name: Express Links
    description: |-
      Express links are links towards a web app that collects information from an end user,
      sends this data to our cloud, and optionally triggers a calculation.
  - name: Calculations
    description: |-
      Calculations are the results of either a calculation request or an express link request.
      They can be sent to an AudaNet recipient or via email to a specified recipient.

paths:
  /api/v1/calculation_requests:
    post:
      operationId: v1_createCalculationRequest
      tags:
        - Calculation Requests
      summary: Creates a new calculation request
      description: Input data is processed asynchronously, results are delivered via webhook.
      parameters:
        - name: User-Agent
          description: Please provide the name and version of your application here.
          in: header
          required: true
          schema:
            type: string
          example: partner-web-app/1.0
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCalculationRequestBody"
        required: true
      responses:
        "200":
          description: The request has been accepted and will be processed asynchronously. The response contains the ID of the created calculation request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCalculationRequestSuccessResponse"
        "400":
          description: One of the input parameters does not match the requirements. Details are provided in the response body.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCalculationRequestErrorResponse"
        "401":
          description: Your credentials could not be authenticated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCalculationRequestErrorResponse"
        "403":
          description: You are not authorized to create new calculation requests.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCalculationRequestErrorResponse"
        "500":
          description: An internal error has occurred. Additional details might be provided in the response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCalculationRequestErrorResponse"
  /api/v1/calculation_request/{calculationRequestId}/update:
    post:
      operationId: v1_updateCalculationRequest
      tags:
        - Calculation Requests
      summary: Overwrites a subset of fields in an existing calculation request. Triggers a new calculation based on the updates.
      description: ""
      parameters:
        - name: User-Agent
          description: Please provide the name and version of your application here.
          in: header
          required: true
          schema:
            type: string
          example: partner-web-app/1.0
        - name: calculationRequestId
          description: The ID of the calculation request.
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCalculationRequestBody"
        required: true
      responses:
        "200":
          description: The request has been updated and will be processed asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCalculationRequestSuccessResponse"
        "400":
          description: One of the input parameters does not match the requirements. Details are provided in the response body.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCalculationRequestErrorResponse"
        "401":
          description: Your credentials could not be authenticated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCalculationRequestErrorResponse"
        "403":
          description: You are not authorized to create new calculation requests.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCalculationRequestErrorResponse"
        "409":
          description: Calculation is not ready yet.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCalculationRequestErrorResponse"
        "500":
          description: An internal error has occurred. Additional details might be provided in the response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCalculationRequestErrorResponse"
  /api/v1/express_links:
    post:
      operationId: v1_createExpressLink
      tags:
        - Express Links
      summary: Creates a new express link to be used by an end user. If an email address and/or phone number are present, the link will be sent there.
      description: ""
      parameters:
        - name: User-Agent
          description: Please provide the name and version of your application here.
          in: header
          required: true
          schema:
            type: string
          example: partner-web-app/1.0
      requestBody:
        description: |-
          **Please note:** Due to certain limitations in the OpenAPI specification (required fields cannot be defined as dependent
          on a value of another field), the specification is slightly incomplete. The fields marked as `"required"` are only
          required if the field `doCalculate` is true.

          The fields in the `VehicleData` schema can be used to pre-fill data for the end user (e.g. vehicle information).
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateExpressLinkRequestBody"
        required: true
      responses:
        "200":
          description: The request has been accepted and will be processed asynchronously. The response contains the ID of the created calculation request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateExpressLinkResponse"
        "400":
          description: One of the input parameters does not match the requirements. Details are provided in the response body.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateExpressLinkResponse"
        "401":
          description: Your credentials could not be authenticated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateExpressLinkResponse"
        "403":
          description: You are not authorized to create new calculation requests.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateExpressLinkResponse"
        "500":
          description: An internal error has occurred. Additional details might be provided in the response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateExpressLinkResponse"
  /api/v1/calculations/{calculationId}/send:
    post:
      operationId: v1_sendCalculation
      tags:
        - Calculations
      summary: Sends a finished calculation to an AudaNet and/or email recipient.
      description: ""
      parameters:
        - name: User-Agent
          description: Please provide the name and version of your application here.
          in: header
          required: true
          schema:
            type: string
          example: partner-web-app/1.0
        - name: calculationId
          description: The ID of the calculation finished calculation (you receive this via webhook).
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalculationRecipients"
        required: true
      responses:
        "200":
          description: The calculation has been sent to the specified recipients. Please note that there are no delivery guarantees for email recipients.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendCalculationSuccessResponse"
        "400":
          description: One of the input parameters does not match the requirements. Details are provided in the response body.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendCalculationErrorResponse"
        "401":
          description: Your credentials could not be authenticated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendCalculationErrorResponse"
        "403":
          description: You are not authorized to create new calculation requests.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendCalculationErrorResponse"
        "409":
          description: The calculation is not in a state in which it can be send. One such reason might be that the calculation has not been finished, yet. Requests that return this error should be retried at a later time.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendCalculationErrorResponse"
        "500":
          description: An internal error has occurred. Additional details might be provided in the response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendCalculationErrorResponse"
  /api/v1/calculations/{calculationId}:
    get:
      operationId: v1_getCalculation
      tags:
        - Calculations
      summary: Returns the details of a calculation.
      description: ""
      parameters:
        - name: User-Agent
          description: Please provide the name and version of your application here.
          in: header
          required: true
          schema:
            type: string
          example: partner-web-app/1.0
        - name: calculationId
          description: The ID of the calculation (you receive this via webhook).
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
      responses:
        "200":
          description: The calculation data has been retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCalculationSuccessResponse"
        "401":
          description: Your credentials could not be authenticated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCalculationErrorResponse"
  /api/v1/calculations/{calculationId}/possible_parts:
    get:
      operationId: v1_possibleParts
      tags:
        - Calculations
        - Parts
      summary: Returns a list of parts which apply to the vehicle in the given request.
      description: ""
      parameters:
        - name: User-Agent
          description: Please provide the name and version of your application here.
          in: header
          required: true
          schema:
            type: string
          example: partner-web-app/1.0
        - name: calculationId
          description: The ID of the calculation finished calculation (you receive this via webhook).
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
      responses:
        "200":
          description: A list of parts applicable to the requests vehicle.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPartsSuccessResponse"
        "404":
          description: Calculation not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PossiblePartsErrorResponse"
        "401":
          description: Your credentials could not be authenticated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PossiblePartsErrorResponse"
        "409":
          description: Calculation is not ready yet.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PossiblePartsErrorResponse"
        "500":
          description: An internal error has occurred. Additional details might be provided in the response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PossiblePartsErrorResponse"
  /api/v1/parts:
    get:
      operationId: v1_listParts
      tags:
        - Parts
      summary: Returns a list of all available part numbers.
      description: ""
      parameters:
        - name: User-Agent
          description: Please provide the name and version of your application here.
          in: header
          required: true
          schema:
            type: string
          example: partner-web-app/1.0
      responses:
        "200":
          description: A JSON containing a list of all parts available.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPartsSuccessResponse"
        "401":
          description: Your credentials could not be authenticated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPartsErrorResponse"
        "403":
          description: You are not authorized to list parts.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPartsErrorResponse"
        "500":
          description: An internal error has occurred. Additional details might be provided in the response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPartsErrorResponse"
  /api/v1/calculations/{calculationId}/photos/{photoId}:
    get:
      operationId: v1_getCalculationPhoto
      tags:
        - Calculations
      summary: Returns the details of a calculation.
      description: ""
      parameters:
        - name: User-Agent
          description: Please provide the name and version of your application here.
          in: header
          required: true
          schema:
            type: string
          example: partner-web-app/1.0
        - name: calculationId
          description: The ID of the calculation (you receive this via webhook).
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
        - name: photoId
          description: The ID of the photo.
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
      responses:
        "200":
          content:
            image/jpeg:
              schema:
                type: string
                format: byte
                example: ""
          description: The photo has been found and is returned as a JPEG image.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCalculationPhotoErrorResponse"
          description: Your credentials could not be authenticated.

webhooks:
  calculationRequestCreated:
    post:
      summary: Webhook for calculation request events.
      description: This webhook is called for events that occur when processing calculation requests.
      parameters:
        - name: User-Agent
          description: Name and version of the application providing the calculation.
          in: header
          required: true
          schema:
            type: string
          example: FIASCO Cloud/1.0
        - name: Authorization
          description: An optional authorization token can be send as bearer token (provided by you).
          in: header
          required: false
          schema:
            type: string
        - name: event
          description: A name identifiying this event.
          in: query
          required: true
          schema:
            type: string
            enum:
              - requestReceived
              - vinLookupError
              - calculationReady
              - calculationRequestClosed
              - feedbackRequested
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalculationRequestResultBody"
        required: true
      responses:
        "200":
          description: The webhook has been received successfully (all 2xx responses are considered to mean this).
        "400":
          description: A client-side error occurred (all 4xx responses are handled like this).
        "401":
          description: A client-side error occurred (all 4xx responses are handled like this).
        "403":
          description: A client-side error occurred (all 4xx responses are handled like this).
        "500":
          description: A server-side error occurred (all 5xx responses are handled like this). In this case we will try to redeliver the webhook notification a few times.
  expressLinkCompleted:
    post:
      summary: Webhook for express link events.
      description: This webhook is called for events surrounding express links.
      parameters:
        - name: User-Agent
          description: Name and version of the application providing the calculation.
          in: header
          required: true
          schema:
            type: string
          example: FIASCO Cloud/1.0
        - name: Authorization
          description: An optional authorization token can be send as bearer token (provided by you).
          in: header
          required: false
          schema:
            type: string
        - name: event
          description: A name identifiying this event.
          in: query
          required: true
          schema:
            type: string
            enum:
              - linkSentViaSMS
              - linkSentViaEmail
              - requestReceived
              - vinLookupError
              - calculationReady
              - calculationRequestClosed
              - feedbackRequested
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExpressLinkResultBody"
        required: true
      responses:
        "200":
          description: The webhook has been received successfully (all 2xx responses are considered to mean this).
        "400":
          description: A client-side error occurred (all 4xx responses are handled like this).
        "401":
          description: A client-side error occurred (all 4xx responses are handled like this).
        "403":
          description: A client-side error occurred (all 4xx responses are handled like this).
        "500":
          description: A server-side error occurred (all 5xx responses are handled like this). In this case we will try to redeliver the webhook notification a few times.

components:
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
      description: 'Please provide your API key as the bearer token (via the HTTP header "Authorization: Bearer $API_TOKEN").'
  schemas:
    CreateCalculationRequestBody:
      description: ""
      allOf:
        - $ref: "#/components/schemas/RequestMetaData"
        - $ref: "#/components/schemas/CalculationRequestType"
        - $ref: "#/components/schemas/DamageOrHailRequest"
        - $ref: "#/components/schemas/CalculationRecipients"

    UpdateCalculationRequestBody:
      description: ""
      type: object
      required:
        - hailDamages
      properties:
        hailDamages:
          type: array
          description: A list of parts that are affected by hail damage. Can be empty and updated later.
          items:
            $ref: "#/components/schemas/HailDamagePart"

    RequestMetaData:
      type: object
      properties:
        referenceId:
          type:
            - string
            - "null"
          maxLength: 50
          description: A reference ID that is added to the request for future reference (e.g. case ID, order ID, etc.). Set this to something for your own reference.
        webhookAuthToken:
          type:
            - string
            - "null"
          description: |-
            If set, this token will be used from our servers to authenticate against a receiving webhook server. If not set,
            a value configured for your account will be used.
        callbackUrl:
          type:
            - string
            - "null"
          description: The webhook URL to send the results to. If not set, the default URL configured for your account will be used.
        billTo:
          type:
            - string
            - "null"
          pattern: "^fiasco-cust-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          minLength: 48
          maxLength: 48
          example: fiasco-cust-12341234-1234-1234-1234-123412341234
          description: |-
            If this field is set, the calculation request will be billed to the company associated with the value of this field. If no such company exists, the request
            will be denied. If the field is empty or not set, the request will be billed to the company associated with the API token. Possible values will be provided
            by FIASCO open request.

            The format of this field is that of a UUID with the prefix "fiasco-cust-".

    CalculationRequestType:
      type: object
      properties:
        calculationType:
          type:
            - string
            - "null"
          default: damage
          enum:
            - damage
            - hail_damage
          example: damage
          description: |-
            Defines the type of calculation that should be performed. Either a normal "damage" calculation or a "hail damage" calculation (mainly fixing dents).
            Depending on the type of calculation, different parameters are required.
        calculationProvider:
          type:
            - string
            - "null"
          default: audatex
          enum:
            - audatex
            - dat
          example: audatex
          description: |-
            Via this parameter it is possible to select the calculation provider. The default is "audatex".

    DamageOrHailRequest:
      oneOf:
        - $ref: "#/components/schemas/DamageRequestData"
        - $ref: "#/components/schemas/HailDamageRequestData"

    DamageRequestData:
      description: The data required for a damage calculation.
      allOf:
        - $ref: "#/components/schemas/VehicleData"
        - $ref: "#/components/schemas/VehicleAndDamagePhotos"
        - $ref: "#/components/schemas/VehicleDamagesToConsiderOrExclude"
        - $ref: "#/components/schemas/CalculationParameters"

    HailDamageRequestData:
      description: The data required for a hail damage calculation.
      allOf:
        - $ref: "#/components/schemas/VehicleData"
        - $ref: "#/components/schemas/CalculationParameters"
        - $ref: "#/components/schemas/HailDamageData"

    VehicleData:
      type: object
      required:
        - vin
      properties:
        vin:
          type:
            - string
            - "null"
          minLength: 17
          maxLength: 18
          description: Vehicle identification number (VIN; 17 chars) with optional check digit (18 chars).
          pattern: ^[1234567890ABCDEFGHJKLMNPRSTUVWXYZ]{17,18}\d?$
          example: M2Y3ULY19D85CCCNN5
        mileage:
          type:
            - number
            - "null"
          minimum: 0
          description: Indicates the number of kilometers the vehicle has driven. Required for total loss calculation.
          example: 142000
        firstRegistrationDate:
          type:
            - string
            - "null"
          description: |-
            Date of first registration of the vehicle in the format as defined by full-date in
            [RFC3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6) ('yyyy-mm-dd'). Additionally we support the
            format 'dd.mm.yyyy'. Required for total loss calculation if not enough data is available via VIN lookup.
          format: date
          example: 2020-04-14
        licensePlate:
          type:
            - string
            - "null"
          maxLength: 15
          description: Will be added to the calculation result (for further reference). Not required for the actual calculation.
          example: S-AB 1234
        hsnTsn:
          type:
            - string
            - "null"
          maxLength: 7
          description: Will be added to the calculation result (for further reference). Not required for the actual calculation.
          example: 1234ABC
    VehicleAndDamagePhotos:
      type: object
      required:
        - photos
      properties:
        photos:
          type: array
          description: |-
            Photos should meet certain requirements. Read more about that in the
            [detailed description](https://github.com/fiasco-gmbh/openapi/blob/main/Photo%20Requirements.md).
          items:
            type: object
            required:
              - data
            properties:
              data:
                type: string
                format: byte
                description: "Base64-encoded image data. Formats: JPEG, JPEG-XL, PNG, HEIC (HEVC encoded in HEIF), WebP, or TIFF."
              contentType:
                type:
                  - string
                  - "null"
                description: The MIME type of the image (e.g. 'image/jpeg', 'image/jxl', 'image/png', 'image/heic', 'image/webp', 'image/tiff').
              filename:
                type:
                  - string
                  - "null"
                description: Filename of the photo.
              subject:
                type:
                  - string
                  - "null"
                default: common
                description: |-
                  The subject of the photo (common picture of the car, photo of a damage, other/unspecified, ...). The value `glass_sticker`
                  means a special sticker placed behind glass to highlight defects in the glass itself, e.g. a chip in the windshield.

                  Only photos __not__ marked "common" or "other" will be considered for damage detection.
                enum:
                  - common
                  - other
                  - dashboard
                  - damage
                  - registration_paper
                  - vehicle_front
                  - windshield
                  - glass_sticker
                  - glass_general
                  - glass_damage
                  - tires_general
                  - tires_damage
                  - interior_general
                  - interior_damage
                  - body_dirt
                  - glass_dirt
                  - interior_dirt
    VehicleDamagesToConsiderOrExclude:
      type: object
      properties:
        damagesToConsider:
          deprecated: true
          type: array
          minimum: 0
          description: |-
            If not empty, the union of damages detected in the photos and this list will be considered in the calculation.
            This is a way to limit the calculation to certain damages (e.g. a subset reported by a driver).
          items:
            type: object
            required:
              - damagedPart
              - damageType
            properties:
              damagedPart:
                type: string
                description: The damaged part (e.g. 'bumper_rear', 'bumper_front', ...)
                enum:
                  - a_pillar_left
                  - a_pillar_right
                  - bumper_rear
                  - bumper_front
                  - door_rear_left
                  - door_rear_right
                  - door_front_left
                  - door_front_right
                  - engine_hood
                  - fender_rear_left
                  - fender_rear_right
                  - fender_front_left
                  - fender_front_right
                  - fuel_filler_cap
                  - headlight_left
                  - headlight_right
                  - rear_mirror_left
                  - rear_mirror_right
                  - rear_window
                  - rim_rear_left
                  - rim_rear_right
                  - rim_front_left
                  - rim_front_right
                  - roof
                  - side_rear_left
                  - side_rear_right
                  - sill_left
                  - sill_right
                  - tailgate
                  - taillight_left
                  - taillight_right
                  - windschield
                  - roof_window
                  - trunk
              damageType:
                type: string
                description: The type of the damage (e.g. 'paint', 'dent', ...)
                enum:
                  - paint
                  - dent
                  - paint_dent
                  - crack
                  - crack_defect
        damagesToExclude:
          deprecated: true
          type: array
          minimum: 0
          description: |-
            If not empty, the damages detected in the photos less the damages defined in this list will be considered in the
            calculation. This is a way to limit the calculation to certain damages (e.g. new vs. old damages).
          items:
            type: object
            required:
              - damagedPart
              - damageType
            properties:
              damagedPart:
                type: string
                description: The damaged part (e.g. 'bumper_rear', 'bumper_front', ...)
                enum:
                  - a_pillar_left
                  - a_pillar_right
                  - bumper_rear
                  - bumper_front
                  - door_rear_left
                  - door_rear_right
                  - door_front_left
                  - door_front_right
                  - engine_hood
                  - fender_rear_left
                  - fender_rear_right
                  - fender_front_left
                  - fender_front_right
                  - fuel_filler_cap
                  - headlight_left
                  - headlight_right
                  - rear_mirror_left
                  - rear_mirror_right
                  - rear_window
                  - rim_rear_left
                  - rim_rear_right
                  - rim_front_left
                  - rim_front_right
                  - roof
                  - side_rear_left
                  - side_rear_right
                  - sill_left
                  - sill_right
                  - tailgate
                  - taillight_left
                  - taillight_right
                  - windschield
                  - roof_window
                  - trunk
              damageType:
                type: string
                description: The type of the damage (e.g. 'paint', 'dent', ...)
                enum:
                  - paint
                  - dent
                  - paint_dent
                  - crack
                  - crack_defect
    HailDamagePart:
      type: object
      description: |-
        Data required to calculate hail damage costs. If a part shall be replaced, only a subset of information
        is required (basically just the part id). If a part shall be repaired, more information is required.
      allOf:
        - $ref: "#/components/schemas/HailDamagePartMetaData"
      oneOf:
        - $ref: "#/components/schemas/HailDamagePartRepair"
        - $ref: "#/components/schemas/HailDamagePartReplace"
    HailDamagePartMetaData:
      type: object
      description: Meta data about a part that was damaged by hail.
      required:
        - partId
      properties:
        partId:
          type:
            - string
            - "null"
          description: The FIASCO part ID of the part that is affected by hail damage.
    HailDamagePartRepair:
      type: object
      description: Data required to calculate repair costs after a hail damage.
      required:
        - partId
        - repairMethod
        - numberOfDents
        - avgDentSize
      properties:
        isPlastic:
          description: Set this to true if the part is made out of plastic.
          type:
            - boolean
            - "null"
          default: false
        repairMethod:
          description: The repair method for the part.
          type:
            - string
            - "null"
          enum:
            - repair
        allowRepairMethodOptimization:
          description: |-
            If set to true, the calculation engine is allowed to choose the best possible repair method
            and techniques. In this context, "best" refers to the cost.
          type:
            - boolean
            - "null"
          default: false
        optimizedRepairMethodThreshold:
          description: |-
            If repair method optimization is enabled, this threshold controls how big the difference
            between different repair methods and techniques must be before a method or technique are changed.
          type:
            - number
            - "null"
          minimum: 0.0
          maximum: 1.0
          default: 0.01
        repairMethodOptimizationMethods:
          description: |-
            If repair method optimization is enabled, this field determines which optimization methods will be used for repair.
          type:
            - array
            - "null"
          default: []
          items:
            type: string
            enum:
              - hail_repair
              - press
              - replace
        numberOfDents:
          description: The number of dents on the part.
          type: integer
          minimum: 1
          maximum: 800
        avgDentSize:
          description: The average size of the dents in millimeters. Values can only be given in 10mm interval steps.
          type: integer
          minimum: 10
          maximum: 80
          default: 10
        repairTechniques:
          description: |-
            The repair techniques that can be used for the part. One ore more techniques must
            be specified.
          type:
            - array
            - "null"
          default: []
          items:
            type: string
            enum:
              - prePrint
              - overlapZone
              - glue
    HailDamagePartReplace:
      type: object
      description: Data required to calculate replacement costs after a hail damage.
      required:
        - repairMethod
      properties:
        repairMethod:
          description: The repair method for the part.
          type:
            - string
            - "null"
          enum:
            - replace
    HailDamageData:
      type: object
      properties:
        hailTriggerVariant:
          type: string
          description: Variant to use for calculation matrix and rules. Please contact support to acquire possible values.
        hailDamages:
          type: array
          description: A list of parts that are affected by hail damage. Can be empty and updated later.
          items:
            $ref: "#/components/schemas/HailDamagePart"

    CalculationParameters:
      description: |-
        Contains all parameters necessary for an actual cost calculation (e.g. labor rates).
      allOf:
        - $ref: "#/components/schemas/LaborRates"
        - type: object
          properties:
            paintSystem:
              type:
                - string
                - "null"
              enum:
                - manufacturer
                - azt
              default: manufacturer
              description: The paint system to base the calculation on (AZT or Manufacturer)
            replacementPartsSurcharge:
              type:
                - number
                - "null"
              default: 0
              minimum: -10
              maximum: 10
              description: Relative surcharge for replacement parts (e.g. 0.1 for 10%, -0.2 for a 20% discount) [Audatex block codes 20 and 21]
            paintMaterialPercentage:
              type:
                - number
                - "null"
              default: 0.38
              minimum: 0
              maximum: 1
              description: Relative percentage of paint material in relation to labor costs (e.g. 0.3 for 30%) [Audatex block codes 40 and 51 depending on the chosen paint system]
            paintMaterialVw:
              type:
                - number
                - "null"
              default: 0
              minimum: 0
              maximum: 999
              description: Paint material costs per unit in EUR for VW vehicles [Audatex block code 81]
            smallPartsPercentage:
              type:
                - number
                - "null"
              default: 0.02
              minimum: 0
              maximum: 1
              description: Relative percentage of small parts material in relation to labor costs (e.g. 0.01 for 1%) [Audatex block codes 40 and 51 depending on chosen paint system]
            colorMatchingAllowed:
              type: boolean
              default: true
              description: Allow paint color fading on adjacent parts.
            paintAllAssemblyPartsDismounted:
              type: boolean
              default: true
              description: Paint all assembly parts dismounted.
            resetErrorMemory:
              description: |-
                If set to true, a position to reset the error memory will be added to the calculation. If set
                to false, it will not be added. If omitted, a context specific default is applied.
              type:
                - boolean
                - "null"
            ignoredPartTagsByAction:
              description: |-
                Defines which part tags should be ignored for specific actions during calculation. 
                Each action type can have an array of tag strings that will be ignored.
              type:
                - object
                - "null"
              properties:
                replace:
                  type: array
                  description: Array of part tags to ignore for replace actions.
                  items:
                    type: string
                  default: []
                repair:
                  type: array
                  description: Array of part tags to ignore for repair actions.
                  items:
                    type: string
                  default: []
                paint:
                  type: array
                  description: Array of part tags to ignore for paint actions.
                  items:
                    type: string
                  default: []
                repairPaint:
                  type: array
                  description: Array of part tags to ignore for repair paint actions.
                  items:
                    type: string
                  default: []
                newPaint:
                  type: array
                  description: Array of part tags to ignore for new paint actions.
                  items:
                    type: string
                  default: []
            checkTireWhenReplacingWheelArchTrim:
              type: boolean
              default: true
              description: Enable checking the tires whenever the wheel arch trim is replaced.
            onlyCheckWheelsAndTires:
              type: boolean
              default: true
              description: Enable to force wheels and tires to only allow check positions.
            workHoursForHighVoltageActivation:
              type:
                - number
                - "null"
              minimum: 0.0
              maximum: 10
              default: 0.5
              description: Number of hours required for high voltage safety procedures during a calculation.
            materialCostsCavitySeal:
              $ref: "#/components/schemas/MaterialCosts"
            materialCostsAdhesive:
              $ref: "#/components/schemas/MaterialCosts"
            materialCostsAlluvial:
              $ref: "#/components/schemas/MaterialCosts"
            materialCostsUnderSeal:
              $ref: "#/components/schemas/MaterialCosts"
            maximumRepairTimeByPartGroup:
              description: |-
                Defines the maximum repair time for parts in a group, before they will be replaced instead of repaired.
                Possible part groups: front_bumper, headlight, window_screen, engine_hood, front_fender, front_door, a_pillar, b_pillar, c_pillar, d_pillar, door_sill, strut, roof, wheel, back_door, rear_bumper, side_panel, tailgate
              type:
                - object
                - "null"
              properties:
                groupName:
                  type: number
                  description: Maximum repair time in hours.
                  default: null
    MaterialCosts:
      description: |-
        Sets the additional material costs for this material depending on the amount of affected parts.
        Please not that only certain parts incur costs for a material.
      type:
        - object
        - "null"
      properties:
        steps:
          type: array
          description: Array of number of minimum affected parts to choose costs for.
          items:
            type: integer
          default: [1, 3, 6]
        costs:
          type: array
          description: Array of of material costs to apply for the minimum number of affected parts given above.
          items:
            type: integer
          default: [10, 15, 20]
    LaborRates:
      description: |-
        Defines the labor rates to be used for the cost calculation.
        If a ZIP code is given any specific labor rates will be
        overwritten by average labor rates for that ZIP code.
      oneOf:
        - $ref: "#/components/schemas/SpecificLaborRates"
        - $ref: "#/components/schemas/AverageLaborRatesViaZipCode"
    SpecificLaborRates:
      type: object
      required:
        - laborRateMechanics
        - laborRateElectronics
        - laborRateBody
        - laborRateHailDamage
        - laborRatePaint
      properties:
        laborRateMechanics:
          type: number
          minimum: 0.01
          maximum: 999.99
          description: Labor rate for mechanical work (Karosserieschlosser)
          example: 80
        laborRateElectronics:
          type: number
          minimum: 0.01
          maximum: 999.99
          description: Labor rate for electrical work (Elektrik)
          example: 80
        laborRateBody:
          type: number
          minimum: 0.01
          maximum: 999.99
          description: Labor rate for body work (Karosseriebau)
          example: 80
        laborRateHailDamage:
          type: number
          minimum: 0.01
          maximum: 999.99
          description: Labor rate for hail damage (Hagelschaden)
          example: 80
        laborRatePaint:
          type: number
          minimum: 0.01
          maximum: 999.99
          description: Labor rate for paint work (Lackarbeiten)
          example: 80
    AverageLaborRatesViaZipCode:
      type: object
      required:
        - laborRatesArea
      properties:
        laborRatesCountry:
          type:
            - string
            - "null"
          description: Country code (ISO 3166-1 ALPHA-2) for the ZIP code.
          default: DE
          enum:
            - DE
        laborRatesArea:
          type: string
          description: The area in the country (usually a zip code) for which average labor rates should be determined.
          example: "12345"
        laborRatesZipCode:
          deprecated: true
          type: string
          description: "The zip code for which average labor rates should be determined. DEPRECATED: Use `laborRatesArea` instead."
          example: "12345"
    CalculationRequestResultBody:
      type: object
      properties:
        success:
          type: boolean
          description: Either true (request was successfully created) of false (an error occurred). Always available.
          example: true
        message:
          type: string
          description: Describes the return status (e.g. error details). Can be null or empty.
          example: Calculation request successfully processed
        calculationRequestId:
          type: string
          format: uuid
          description: ID of the newly created request. Only available when `success` is true.
          example: 12341234-1234-1234-1234-123412341234
        calculationId:
          type: string
          format: uuid
          description: ID of the finished calculation.
          example: 12341234-1234-1234-1234-123412341234
        calculationText:
          type: string
          description: |-
            The calculation text as returned by the calculation engine.
            Only available when `success` is true.
        calculationDV90:
          type: string
          description: |-
            The calculation in the DV90 format.
            Only available when `success` is true.
        calculationVXS:
          type: string
          description: |-
            The calculation in the VXS format.
            Only available when `success` is true and the calculation provider was DAT.
        calculationPDF:
          type: string
          description: |-
            Base64-encoded PDF that contains the results of the calculation.
            Only available when `success` is true and the calculation provider was DAT.
        referenceId:
          type: string
          description: The reference ID that was passed in the original request.
        audaNetCaseId:
          type: string
          format: uuid
          example: B1CAF6C5-AFAF-B40D-B0C8-9E0A2A041179
          description: |-
            The AudaNet case ID. Only available when `success` is true and if an `audaNetRecipient`
            was specified when the calculation was requested.
        totalPrice:
          type: number
          format: float
          description: The total price of the calculation without tax.
        totalPriceWithTax:
          type: number
          format: float
          description: The total price of the calculation including tax.
        totalTax:
          type: number
          format: float
          description: The total tax amount.
        taxRates:
          type: array
          items:
            type: object
            properties:
              rate:
                type: number
                format: float
                description: The tax rate percentage
              amount:
                type: number
                format: float
                description: The tax amount for this rate
          description: |-
            The tax rates that were applied in the calculation.
    CreateCalculationRequestErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true of false. Always available.
        message:
          type:
            - string
            - "null"
          description: Describes the return status (e.g. error details). Can be null or empty.
      example:
        success: false
        message: Your token could not be authenticated
    CreateCalculationRequestSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true (request was successfully created) of false (an error occurred). Always available.
          example: true
        message:
          type: string
          description: Describes the return status (e.g. error details). Can be null or empty.
          example: Calculation successfully requested
        calculationRequestId:
          type: string
          format: uuid
          description: ID of the newly created request. Only available when 'success' is true.
          example: 12341234-1234-1234-1234-123412341234
        photos:
          type: array
          description: |-
            A list of photos that were successfully uploaded. The order of this list equals the order of the list received during the request.
          items:
            type: object
            properties:
              filename:
                type: string
                description: The filename of the photo.
                example: "fi-img-952a6927-5c6c-49ab-881a-3d29b4399292.jpeg"

    UpdateCalculationRequestSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true (request was successfully created) of false (an error occurred). Always available.
          example: true
        message:
          type: string
          description: Describes the return status (e.g. error details). Can be null or empty.
          example: Calculation successfully updated
    UpdateCalculationRequestErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true of false. Always available.
        message:
          type:
            - string
            - "null"
          description: Describes the return status (e.g. error details). Can be null or empty.
      example:
        success: false
        message: Your token could not be authenticated

    ExpressLinkRecipients:
      type: object
      description: An express link can be sent via email or SMS. If both targets a specified, the link will be sent to both.
      properties:
        emailRecipient:
          type:
            - string
            - "null"
          format: email
          description: An email address to send a request for data to.
        smsRecipient:
          type:
            - string
            - "null"
          format: phone
          description: A mobile phone number to send a request for data to (via SMS).

    ExpressLinkVehicleOwnerDetails:
      type: object
      properties:
        firstName:
          type:
            - string
            - "null"
          description: The first name of the vehicle owner.
          maxLength: 128
        lastName:
          type:
            - string
            - "null"
          description: The last name of the vehicle owner.
          maxLength: 128
        street:
          type:
            - string
            - "null"
          description: The street name and number of the vehicle owner.
          maxLength: 128
        city:
          type:
            - string
            - "null"
          description: The city of the vehicle owner.
          maxLength: 128
        zipCode:
          type:
            - string
            - "null"
          description: The ZIP code of the vehicle owner.
          example: 12345
        country:
          type:
            - string
            - "null"
          description: The country of the vehicle owner.
        phoneNumber:
          type:
            - string
            - "null"
          format: phone
          description: The phone number of the vehicle owner.
          maxLength: 35
        emailAddress:
          type:
            - string
            - "null"
          format: email
          description: The email address of the vehicle owner.
          maxLength: 160

    ExpressLinkStyling:
      type: object
      description: 'Please note: Due to certain limitations in the OpenAPI specification (required fields cannot be defined as dependent on a value of another field), the specification is slightly incomplete. The fields marked as "required" are only required if the field doCalculate is true.'
      required:
        - imprintUrl
        - privacyPolicyUrl
        - customerInformationUrl
      properties:
        logo:
          type:
            - string
            - "null"
          format: byte
          description: "Base64-encoded logo image. Supported formats: SVG, JPEG, PNG, HEIC (HEVC encoded in HEIF), WebP, or TIFF."
          example: |-
            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
        # logoUrl:
        #   type: string
        #   format: uri
        #   nullable: true
        #   description: "URL to a logo image. The URL must be publicly accessible. Supported formats: SVG, JPEG, PNG, HEIC (HEVC encoded in HEIF), WebP, or TIFF."
        primaryColor:
          type:
            - string
            - "null"
          pattern: ^#[0-9a-fA-F]{6}$
          description: The primary color to be used in the branding (hex color code).
          example: "#000000"
        secondaryColor:
          type:
            - string
            - "null"
          pattern: ^#[0-9a-fA-F]{6}$
          description: The secondary color to be used in the branding (hex color code).
          example: "#00ff00"
        title:
          type:
            - string
            - "null"
          description: The title (e.g. name of the company) that is to shown in the app.
          maxLength: 255
        introduction:
          type:
            - string
            - "null"
          description: Additional details (e.g. address of the company, instructions, ...) that are to shown in the app (e.g. the name of the company's location).
          maxLength: 4096
        phoneNumber:
          type:
            - string
            - "null"
          format: phone
          description: The phone number of the company.
          maxLength: 35
        emailAddress:
          type:
            - string
            - "null"
          format: email
          description: The email address of the company.
          maxLength: 70
        websiteUrl:
          type:
            - string
            - "null"
          format: uri
          description: The URL to the website of the company.
          maxLength: 255
        imprintUrl:
          type:
            - string
            - "null"
          format: uri
          description: The URL to the imprint. The app will directly link to this.
          maxLength: 255
        privacyPolicyUrl:
          type:
            - string
            - "null"
          format: uri
          description: The URL to the privacy policy. The app will directly link to this.
          maxLength: 255
        customerInformationUrl:
          type:
            - string
            - "null"
          format: uri
          description: The URL to the customer information. The app will directly link to this.
          maxLength: 255
    CreateExpressLinkRequestBody:
      properties:
        expirationDate:
          type: string
          format: date
          description: |-
            The date on which the link will expire. If not specified, the link will expire after 30 days.
            Format as defined by full-date in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6) ('yyyy-mm-dd').
            Additionally we support the format 'dd.mm.yyyy'.
        configurationName:
          type: string
          example: "demo_v1"
          description: Name of the app configuration to use. This is defined by FIASCO and given to each partner.
        maximumUses:
          type:
            - integer
            - "null"
          minimum: 1
          default: 1
          description: The maximum number of times the express link can be used. If not set, the link can be used once.
        doCalculate:
          type:
            - boolean
            - "null"
          default: true
          description: |-
            If set to false, the express link will only collect and process data without triggering a calculation.
        recipientProviderAccountId:
          type:
            - string
            - "null"
          format: uuid
          description: The provider account ID for the recipient.
          example: "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
        # We plan to change this to emailRecipient for better readability.
        email:
          type:
            - string
            - "null"
          format: email
          description: An email address to send the express link to.
        # We plan to change this to smsRecipient for better readability.
        phoneNumber:
          type:
            - string
            - "null"
          format: phone
          description: An phone number to send the express link to.
        calculationParameters:
          $ref: "#/components/schemas/CreateCalculationRequestBody"
        vehicleOwnerDetails:
          $ref: "#/components/schemas/ExpressLinkVehicleOwnerDetails"
        styling:
          $ref: "#/components/schemas/ExpressLinkStyling"

    CreateExpressLinkResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true (messages have been sent successfully) of false (an error occurred). Always available.
          example: false
        message:
          type: string
          description: Describes the return status (e.g. error details). Can be null or empty.
          example: The phone number specified does not appear to be in an acceptable format
        expressLinkId:
          type: string
          format: uuid
          description: ID of the express link. Only available when 'success' is true.
          example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
        expressLinkUrl:
          type: string
          format: uri
          description: The URL of the express link (this can be sent to end users). Only available when 'success' is true.
          example: https://demo.fiasco.de/#elt=something-unique
    ExpressLinkResultBody:
      type: object
      properties:
        success:
          type: boolean
          description: Either true (data was collected and (optionally) a calculation has been created) or false (an error occurred). Always available.
          example: true
        message:
          type: string
          description: Describes the return status (e.g. error details). Can be null or empty.
          example: Calculation request successfully processed
        expressLinkRequestId:
          type: string
          format: uuid
          description: ID of the used express link request.
          example: 12341234-1234-1234-1234-123412341234
        calculationId:
          type: string
          format: uuid
          description: ID of the created calculation. You can use this to later get the information about the created request(photos, answers...)
          example: 12341234-1234-1234-1234-123412341234
        calculationText:
          type: string
          description: The calculation text as returned by the calculation engine. Only available when 'success' is true and if a calculation was originally requested.
        referenceId:
          type: string
          description: The reference ID that was passed in the original express link request.(will be similar across all requests for the same express link)
        audaNetCaseId:
          type: string
          format: uuid
          example: B1CAF6C5-AFAF-B40D-B0C8-9E0A2A041179
          description: The AudaNet case ID. Only available when 'success' is true and if an 'audaNetRecipient' was specified when the express link request was requested.
    CalculationRecipients:
      type: object
      properties:
        calculationAudaNetRecipient:
          type:
            - string
            - "null"
          pattern: ^((MemberId)|(LoginId)|(CustomerId)|(CommId)|(ExternalOrganisationId)):([^\s]+)$
          example: CommId:DE123456
          description: |-
            If specified, the finished calculation will be sent via AudaNet to this recipient. Format according to
            Audatex B2B interface. The value contains a type prefix followed by a colon followed by the ID of the
            receiver. The type prefix can be 'MemberId', 'LoginId', 'CustomerId', 'CommId', or 'ExternalOrganisationId'.

            This is only respected if the calculation was requested with the 'audatex' calculation provider.
        calculationEmailRecipient:
          type:
            - string
            - "null"
          format: email
          description: |-
            If specified, the finished calculation will be sent via email to this email address.
            The calculation will be sent as plain text and PDF in a human-readable format.

    PossiblePartsErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true of false. Always available.
        message:
          type:
            - string
            - "null"
          description: Describes the return status (e.g. error details). Can be null or empty.
      example:
        success: false
        message: Your token could not be authenticated

    SendCalculationErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true of false. Always available.
        message:
          type:
            - string
            - "null"
          description: Describes the return status (e.g. error details). Can be null or empty.
      example:
        success: false
        message: Your token could not be authenticated
    SendCalculationSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true (request was successfully created) of false (an error occurred). Always available.
          example: true
        message:
          type: string
          description: Describes the return status (e.g. error details). Can be null or empty.
          example: Calculation successfully requested
    GetCalculationErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true of false. Always available.
        error:
          type:
            - string
            - "null"
          description: Describes the return status (e.g. error details). Can be null or empty.
      example:
        success: false
        message: Unauthorized
    GetCalculationSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true (request was successfully created) of false (an error occurred). Always available.
          example: true
        message:
          type: string
          description: Describes the return status (e.g. error details). Can be null or empty.
          example: Calculation successfully requested
        calculation:
          type: object
          description: The calculation that was sent.
          properties:
            id:
              type: string
              format: uuid
              description: The ID of the calculation.
              example: 12341234-1234-1234-1234-123412341234
            fiasco_id:
              type: string
              description: Unique identifier for the calculation
            status:
              type: string
              example: preprocessing
              description: The current status of the calculation.
            is_test_case:
              type: boolean
              example: false
              description: Whether the calculation is a test case.
        answers:
          type: object
          description: Additional data collected during an app's user journey.
        photos:
          type: array
          description: A list of ids for the photos of the calculation.
          items:
            type: string
      example:
        success: true
        message: calculation request retrieved
        calculation:
          id: 1bb39da6-29fe-4141-bc65-0dec22e93551
          status: calculating
          fiasco_id: D2024-DL-13F8
          is_test_case:
        answers: {}
        photos:
          - 7725ecdf-7285-49b7-a2eb-b3bc6e543aad
    ListPartsSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true of false. Always available.
        parts:
          type: array
          description: A list of parts.
          items:
            type: object
            properties:
              id:
                type: integer
                description: The part number (also called "FIASCO Part ID").
                example: 1130
              label:
                type: string
                description: Name of the part in German.
                example: "Leist. Grill U"
              group:
                type: string
                description: The primary group of the part.
                example: "roof"
              locations:
                type: array
                description: A set of location specifiers.
                enum:
                  - left
                  - right
                  - top
                  - bottom
                  - middle
                  - front
                  - back
                example: "['left', 'top']"
              parents:
                type: array
                description: A list of parent parts IDs.
    ListPartsErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true of false. Always available.
        message:
          type:
            - string
            - "null"
          description: Describes the return status (e.g. error details). Can be null or empty.
      example:
        success: false
        message: Your token could not be authenticated
    GetCalculationPhotoErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Either true of false. Always available.
        error:
          type:
            - string
            - "null"
          description: Describes the return status (e.g. error details). Can be null or empty.
      example:
        success: false
        message: Unauthorized
